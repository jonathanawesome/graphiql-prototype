// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Pet {
  id           String    @id @default(cuid())
  name         String
  owner        Person?    @relation(fields: [ownerId], references: [id])
  ownerId      String?    
  breed        Breed     @relation(fields: [breedName], references: [name])
  breedName    String    
  visits       Visit[]

  // logging
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Person {
  id           String    @id @default(cuid())
  firstName    String
  lastName     String
  pets         Pet[]
  visits       Visit[]
  type         PersonType

  // logging
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt  
}

enum PersonType {
  PET_OWNER
  EMPLOYEE
}

model Breed {
  name           String    @id @unique
  species        Species   
  pets           Pet[]
  subBreeds      SubBreed[]

  // logging
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt   
}

model SubBreed {
  id           String    @id @default(cuid())
  name         String    
  breed        Breed     @relation(fields: [breedName], references: [name])
  breedName    String     

  // logging
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt   
}

enum Species {
  DOG
  CAT
}

model Visit {
  id              String    @id @default(cuid())
  scheduledStart  DateTime
  scheduledEnd    DateTime
  checkInTime     DateTime?
  checkOutTime    DateTime?
  totalCost       Float?
  pet             Pet       @relation(fields: [petId], references: [id])
  petId           String     
  person          Person     @relation(fields: [personId], references: [id])
  personId        String  
  type            VisitType
  status          VisitStatus

  // logging
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt   
}

enum VisitStatus {
  SCHEDULED
  IN_PROGRESS
  COMPLETE
}

enum VisitType {
  CHECKUP
  EMERGENCY
}